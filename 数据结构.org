* 数据结构
** 概论
   * 逻辑结构：
       线性结构：数组，队列，栈...
       非线性结构：树，图
   * 存储结构：顺序存储，链式存储
   * 数据间关系->属
     基本操作->方法
   * 算法与算法分析
     特性：输入，输出，确定性，有穷性，可行性
     评价标准：正确性，可读性(模块化结构，名称有意义，加注释，不用Goto语句)，健壮性(对非法输入进行判断处理)
     时间复杂性，空间复杂性
   * 算法分析：
       时间复杂度量，空间复杂度量
       
** 线性表 
   * 逻辑结构：具有相同类型的n个数据元素组成的有限序列
   * 存储结构：顺序结构(数组)，链式结构(指针)
   * /作业：将两个有序线性表进行合并 要求:(1)用顺序表实现 (2)用链表实现 (3)用菜单选择/
   * 链表：
     * 查找倒数k个元素：两个指针前后扫描
     * 循环链表，双向循环链表
   * 顺序表和链表的比较：
     * 顺序表：优点，随机存取；缺点：插入删除需要移动元素
     * 链表：优点，插入删除不需要移动元素；缺点：不能随机存

** 栈和队列
   * 栈：插入删除固定在某一端(FILO); 队列：插入一端，删除在另一端(FIFO)
   * 栈原理：栈空top=-1, 进栈top+1, 出栈top-1, 栈空不能pop, 栈满不能push
   * 两栈共享空间：栈底在两头，左边push：top++, 右边push：top--，两边相反
   * 链表实现，表头作为栈顶，头插方便,push没有上限，直至内存耗尽
   * 递归：递归的实现需要用栈,自己调用自己,递归必须有条件限制(求阶乘，汉诺塔)
     *编写递归算法的思路:*
     * 将大问题分解为若干个小问题，并且小问题的与大问题的解决算法一样
     * 寻找递归的终止条件和结果，当小问题小到什么时候，可以知道结果
     *编写求解汉诺塔问题的算法:*
     * 将n-1个盘中搬到B,将最后一个盘子搬到C,将n-1个盘子搬到C，完成
   * 栈的应用：表达式求值
     - 转化为后缀表达式
       * 不需要栈
     - 运算符优先法
       * 两个栈：运算符栈，操作数栈
       * 每当运算符要进栈时，当前运算符与栈顶运算符比较，小于等于pop，大于push
       * 出栈运算结果再进栈
       * pop时，下面的操作数 exp 上面操作数
   * 表达式
     * 前缀，中缀，后缀
     * 后缀：操作数位置不变，调整的是运算符位置
   * /第三章上机实验：输入一个算术表达式，利用算符优先法求值。例：86.35+(78.4-60.5)*1000/

   * 顺序队列:(循环队列)
     * 进队:(rear+1)%MaxSize , 出队:(front+1)%MaxSize

