* podcast notes
 * 工具贯彻思想，强制解决问题。
 * 大多数的编程语言有着相似的语法思想，但不同的思想的表现形式不尽相同。这意味着我们在学习一门新的语言时不得不花费大量的时间去重新去记忆这些语法表现。这是相当低效的，我们寄希望于能有一种简单思想构建起来的编程语言，尽可能的去简化语法，着重体现思想，从而一通百通。就像围棋，最简单的几个逻辑就可以构建出纷繁复杂的思想与规则。从这个层面上来说，或许lisp这门编程语言是最接近的。
 * 我的理解是，计算机科学分为两个部分：算法与结构，算法着重点一个具体问题的解决思路，结构是指面对个问题给出的总体的解决方案。
   
