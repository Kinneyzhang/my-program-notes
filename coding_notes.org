* about json
  * json.load() # 将一个存储在文件中的json对象(str)转化为相对应的python对象
  * json.loads() # 将一个json对象(str)转化为相对应的python对象
  * json.dump() # 将python的对象转化为对应的json对象(str),并存放在文件中
  * json.dumps() # 将python的对象转化为对应的json对象(str)
  * json中的键值必须使用双引号
  * JSON.stringify(obj)将JSON转为字符串
  * JSON.parse(string)将字符串转为JSON格式

* about Django
  * django删除了表的某些记录后，自增的序号乱了怎么办？
  * django中queryset的序列化用serialize方法，其他基本数据类型用json.dumps()
  * 可用queryset的api：list()，将queryset转成python列表

* 论文周记
** 03.29
   初次接触我的这个毕业设计题目的时候，我对整个系统的框架以及功能模块，技术细节等是没有概念的。我只知道我需要搭建前端的页面，需要用到js,css等，我需要用到python来写业务逻辑.....虽然这些技术都没有开设相应的课程，但是只是由于个人兴趣，都差不多有自学过，所以还算有把握。
   寒假里和王老师以及同学们的交流后，让我对整个系统有了初步的概念。寒假里主要进行了技术的准备，学习了vue.js和webpack，使前端页面的搭建更加高效；复习巩固了一下Django用来作为后端的服务器框架。在这个过程中有过很多次抓耳挠腮，苦思冥想，但问题最后都解决了。不得不说从零开始学习一种框架真的是有一定的难度，需要反复的理解与巩固，更何况我学了两个，哈哈。
   开学后的几次交流，我让对这个系统的一些细节有个更加深入的理解，了解了我需要实现哪些功能，比如：前后端通信，上传下载，题库设计，智能推荐，分角色登陆，多线程.....这些就是我接下来要做的事情。
   每一块都需要花很多的时间去研究琢磨，一是之前没有做过，而是要考虑如何和Django，vue结合。刚开学的时候我花了很多的时间去研究前后端的数据通信的问题，百度各种博客，看官方的文档，对照理解，解决了。今天，解决了用户的注册登陆问题，使用axios进行数据请求。接下来的时间不多了，需要抓紧时间去研究接下来的很多功能。
   我相信搭建这个系统的过程会是越来越快，越来越顺畅的。因为前期有很多编码规范以及技术上的问题，所有实现一个小的功能都需要花很多的时间去看官方文档。但是一旦熟悉了，后面编程的过程就很顺畅了。加油！		
