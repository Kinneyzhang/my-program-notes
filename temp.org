* about json
  * json.load() # 将一个存储在文件中的json对象(str)转化为相对应的python对象
  * json.loads() # 将一个json对象(str)转化为相对应的python对象
  * json.dump() # 将python的对象转化为对应的json对象(str),并存放在文件中
  * json.dumps() # 将python的对象转化为对应的json对象(str)
  * json中的键值必须使用双引号
  * JSON.stringify(obj)将JSON转为字符串
  * JSON.parse(string)将字符串转为JSON格式

* about Django
  * django删除了表的某些记录后，自增的序号乱了怎么办？
  * django中queryset的序列化用serialize方法，其他基本数据类型用json.dumps()
  * 可用queryset的api：list()，将queryset转成python列表

* 数据库
  * 修改表名：ALTER TABLE knowledge_type RENAME TO knowledge_point;
* 论文周记
** 03.29
   初次接触我的这个毕业设计题目的时候，我对整个系统的框架以及功能模块，技术细节等是没有概念的。我只知道我需要搭建前端的页面，需要用到js,css等，我需要用到python来写业务逻辑.....虽然这些技术都没有开设相应的课程，但是只是由于个人兴趣，都差不多有自学过，所以还算有把握。
   寒假里和王老师以及同学们的交流后，让我对整个系统有了初步的概念。寒假里主要进行了技术的准备，学习了vue.js和webpack，使前端页面的搭建更加高效；复习巩固了一下Django用来作为后端的服务器框架。在这个过程中有过很多次抓耳挠腮，苦思冥想，但问题最后都解决了。不得不说从零开始学习一种框架真的是有一定的难度，需要反复的理解与巩固，更何况我学了两个，哈哈。
   开学后的几次交流，我让对这个系统的一些细节有个更加深入的理解，了解了我需要实现哪些功能，比如：前后端通信，上传下载，题库设计，智能推荐，分角色登陆，多线程.....这些就是我接下来要做的事情。
   每一块都需要花很多的时间去研究琢磨，一是之前没有做过，而是要考虑如何和Django，vue结合。刚开学的时候我花了很多的时间去研究前后端的数据通信的问题，百度各种博客，看官方的文档，对照理解，解决了。今天，解决了用户的注册登陆问题，使用axios进行数据请求。接下来的时间不多了，需要抓紧时间去研究接下来的很多功能。
   我相信搭建这个系统的过程会是越来越快，越来越顺畅的。因为前期有很多编码规范以及技术上的问题，所有实现一个小的功能都需要花很多的时间去看官方文档。但是一旦熟悉了，后面编程的过程就很顺畅了。加油！

** 04.14
   最近两周的时间可谓是成果颇丰，完成了文件的上传与下载，数据库表的设计，后台管理模块的设计，以及前端的ui进一步的美化。
   在这个过程中也是遇到了很多的问题，大多数的问题都是因为对Django，vue的某些技术没有熟练掌握。于是去看官方的文档，查阅博客资料试图一一去解决。由于我采用的是前后端分开开发的模式，而vue又是通过虚拟Dom以数据驱动的前端框架，所以数据的传递在开发的过程中非常的重要。无论是前后端通过JSON发送ajax进行通行，还是前端不同组件之间的数据传递以实现对Dom的操作，都需要考虑数据的状态。这一块就涉及到很多的概念和技术，json的使用，序列化，反序列化，vue的refs等。遇到问题就去查阅资料，在这个过程中学到了很多！
   另外一块就是数据库的设计，对于一个系统来说数据库是相当重要的，因为数据库表的字段直接决定着你将要实现的业务功能。用户所看到的系统各种各样易用，人性化的功能，归根结底是对数据库表的增删改查。起初，我根据自己的理解初步设计了相关的数据表，在导师交流的过程了，发现存在很多的问题。首先是，数据字段的命名不规范，我的字段命名大多是比较普适的名字，比如文本就叫'text', 类型就叫'type'等等，这些名字太简单了放在任何地方都适用容易混淆。王老师说应该结合当前的数据库以及专业术语去命名。我修改了一下，瞬间感觉高大上了许多！其次就是字段考虑不全面，除了必要的一些字段外，还需要一些辅助的字段，比如创建时间，修改时间，录题人，各种状态等。我的理解是，数据表字段的自定越细，后面业务逻辑可以实现在功能就越多。最后，就是关于可拓展性的问题。起初我的一些字段是定死在一张表里面的，经过王老师的知道，我发现有的时候需要将一些可拓展的字段单独建立一个子表，这是我一开始没有想到的。除此之外，关于数据库的设计，在技术上我也遇到了一些问题，比如Django的ManyToManyField等，通过查看文档都可以解决。
   最后一块我想说一说前端ui。以前我经常会接受到一些观点：对于学习计算机科学的人来说，搞网站开发，研究前端和ui是一件掉价的事情。事实也是如此，很多计算机科学出身的程序员瞧不起搞前端的，认为html，js根本不能叫做高级语言，研究算法才是正途....
   为此有一断时间我还特别的抵触去学习js，怀疑自己的这个毕设题目是否有价值，毕竟很多其他同学题目都是一些大数据，深度学习，人工智能等等前沿的算法研究。但是当我真正开始接触这一块到渐渐的摸清前端的一些“规则”的时候，我发现我的想法改变了。或许很多人所认知的前端还停留在早年js操作Dom元素以实现动态效果，这种以事件需要的函数式编程。这几年前端发展迅速，angular，react以及vue的出现，让虚拟Dom的概念大行其道。如今你需要去考虑如何操作Dom元素，只需关心页面中的数据的状态，这使得程序员可以将更多的精力放在业务逻辑的开发。伴随着前端框架的流行，很多ui库也开始出现，极大的提高了构建页面的效率，像bootstrap, element ui, vuetify.....
   开始我用的是bootstrap库，但是bootstrap组件的操作是依赖Jquery，还是要操作Dom，这和vue数据驱动的理念背道而驰。于是放弃了，现在使用为vue量身打造的vuetify。这样，我的技术栈就清晰了。后端用Django，前端用Vue.js + vuetify。期待接下来的实践！

* 毕业设计
** 代码片段
  #+BEGIN_SRC python
    # 每页显示10条
    list_per_page = 10

    # 可编辑字段
    list_editable = ('auth',)

    # 设置哪些字段可以点击进入编辑界面
    list_display_links = ('title', 'body')

    # 过滤器
    list_filter = ('auth', 'title')

    # 时间分层
    date_hierarchy = 'create_time'
  #+END_SRC

** 具体任务
   * formdata传输文件时带上用户信息
   * 登陆后界面header的变化
   * 修改主界面ui，文字展开，样张等
   * 学生个人信息，练习情况界面
   * 上传文件夹的分类
   * 处理题目与知识点的多对多关系
   * model methods, 模型内的条件约束

* 参考文献
  * [[http://f.wanfangdata.com.cn/www/融合用户评分和项目属性的协同过滤推荐算法.ashx?isread=true&type=degree&resourceId=D01345538&transaction=%7B%22id%22%3Anull%2C%22transferOutAccountsStatus%22%3Anull%2C%22transaction%22%3A%7B%22id%22%3A%221118126089089081344%22%2C%22status%22%3A1%2C%22createDateTime%22%3Anull%2C%22payDateTime%22%3A1555417008074%2C%22authToken%22%3A%22TGT-556886-fGB5pgb0Fyl9pppckijKCtcfcRoEcBZx5chIqgcAG3wfpCQBrN-my.wanfangdata.com.cn%22%2C%22user%22%3A%7B%22accountType%22%3A%22Group%22%2C%22key%22%3A%22njsfdxtsg%22%7D%2C%22transferIn%22%3A%7B%22accountType%22%3A%22Income%22%2C%22key%22%3A%22ThesisFulltext%22%7D%2C%22transferOut%22%3A%7B%22GTimeLimit.njsfdxtsg%22%3A30.0%7D%2C%22turnover%22%3A30.0%2C%22orderTurnover%22%3A30.0%2C%22productDetail%22%3A%22degree_D01345538%22%2C%22productTitle%22%3Anull%2C%22userIP%22%3A%22153.3.61.121%22%2C%22organName%22%3Anull%2C%22memo%22%3Anull%2C%22orderUser%22%3A%22njsfdxtsg%22%2C%22orderChannel%22%3A%22pc%22%2C%22payTag%22%3Anull%2C%22webTransactionRequest%22%3Anull%2C%22signature%22%3A%22Bzip%2F7Nbzb%2FH8BI%2BgUdFF6Gocy42LY7NqqiNVDsyg3kyZK9MVd818l9Xn5obDetJHP7iD0lxSTh0%5CnG4U6sh5fqoTNwRxqCHizP7bKfI6EWZBBDlK%2BF0o8sVJI2YenYlnpoNEE9opcpvd7tsdYLeiG5FCM%5CnIHvl8XNGbMSEjwbzEgA%3D%22%2C%22delete%22%3Afalse%7D%2C%22isCache%22%3Afalse%7D][融合用户评分和项目属性的协同 过滤推荐算法]]
  * 
